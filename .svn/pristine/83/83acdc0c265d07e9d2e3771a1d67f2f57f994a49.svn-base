package kr.or.ddit.enroll.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.enroll.service.EnrollService;
import kr.or.ddit.vo.SubjectVO;
import kr.or.ddit.vo.UserVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/enroll")
public class EnrollController {
	
	@Autowired
	EnrollService enrollService;
	
	/**
	 * 강의 개설 신청 페이지 ( 교수 )
	 * @param model	강의 리스트 담아서 보냄
	 * @param req	세션에서 로그인한 유저를 가져오기 위함
	 * @return
	 */
	@GetMapping("/application")
	public String application(Model model, HttpServletRequest request) {

		HttpSession session = request.getSession();
		UserVO userVO = (UserVO) session.getAttribute("userVO");
		
		SubjectVO subjectVO = new SubjectVO();
		subjectVO.setTeaNum(userVO.getUsername());
		
		List<SubjectVO> subjectVOList = enrollService.getSubjectList(subjectVO);
		
		model.addAttribute("subjectVOList", subjectVOList);
		
		return "enroll/application";
	}
	
	/**
	 * 강의 insert를 위해 과목번호 만들어오기
	 * @param request  session값 가져오기 위함
	 * @return 과목번호 SBJ_NUM
	 * ajax
	 */
	@ResponseBody
	@PostMapping("/makeSbjNum")
	public String makeSbjNum(HttpServletRequest request) {
		
		HttpSession session = request.getSession();
		UserVO userVO = (UserVO) session.getAttribute("userVO");
		
		String sbjNum = enrollService.makeSbjNum(userVO.getUsername());
		
		return sbjNum;
	}
	
	/**
	 * 강의개설 insert
	 * @param Subject, Subject_Plan, Subject_Index 테이블에 insert할 데이터
	 * param : {sbjNum=CHE01003, sbjTitle=강의명입니다., sbjGrade=0, sbjRecode=2, sbjPersonnel=40, deptNum=1, sbjRs=1, spMiddleratio=20, spFinalratio=20, spHwratio=20, spAttratio=20, spEtcratio=20, spTextbook=, slTarget_1=1주차 학습목표, slTarget_2=2주차 학습목표, slTarget_3=3주차 학습목표, slTarget_4=4주차 학습목표, slTarget_5=5주차 학습목표, slTarget_6=6주차 학습목표, slTarget_7=7주차 학습목표, slTarget_8=8주차 학습목표, slTarget_9=9주차 학습목표, slTarget_10=10주차 학습목표, slTarget_11=11주차 학습목표, slTarget_12=12주차 학습목표, slTarget_13=13주차 학습목표, slTarget_14=14주차 학습목표, slTarget_15=15주차 학습목표}
	 * @param request : 로그인한 유저 정보 가져오기 위함
	 * @return : 강의개설 신청 페이지로 redirect
	 */
	@PostMapping("/insertSubject")
	public String insertSubject(@RequestParam Map<String, Object> param, HttpServletRequest request) {
		
		HttpSession session = request.getSession();
		UserVO userVO = (UserVO)session.getAttribute("userVO");
		param.put("teaNum", userVO.getUsername());
		
		int deptNum = Integer.parseInt((String) param.get("deptNum"));
		if(deptNum > 0) {
			param.put("deptNum", userVO.getDeptNum());
		}else {
			param.put("deptNum", null);
		}
		
		enrollService.insertSubject(param);
		
		return "redirect:/enroll/application";
	}
	
	/**
	 * 강의 계획서 보기
	 * @param sbjNum 보기를 누른 과목번호
	 * @return 개설과목, 강의계획서, 학습목차가 모두 담긴 map
	 */
	@ResponseBody
	@PostMapping("/getSubjectAjax")
	public Map<String, Object> getSubjectAjax(String sbjNum){
		
		Map<String, Object> map = enrollService.getSubjectAjax(sbjNum);
		log.info("map : " + map);
		
		return map;
	}
}
