package kr.or.ddit.tuition.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.tuition.service.SmsService;
import kr.or.ddit.tuition.service.TuitionService;
import kr.or.ddit.vo.SmsVO;
import kr.or.ddit.vo.TuitionVO;
import kr.or.ddit.vo.UserVO;
import lombok.extern.slf4j.Slf4j;

import org.json.simple.JSONObject;

import net.nurigo.java_sdk.api.Message;
import net.nurigo.java_sdk.exceptions.CoolsmsException;

@Slf4j
@RequestMapping("/tuition")
@Controller
public class TuitionController {

	@Autowired
	TuitionService tuitionService;
	@Autowired
	SmsService smsService;

	/**
	 * 등록금 납부 내역 조회 학생
	 */
	@GetMapping("/tuition")
	public String stuTuitionList(@Valid @ModelAttribute SmsVO smsVO, @RequestParam Map<String, Object> map,
			HttpServletRequest request, Model model) {

		HttpSession session = request.getSession();
		UserVO userVO = (UserVO) session.getAttribute("userVO");

		map.put("stuNum", userVO.getUsername() + "");

		log.info("map : " + map);
		List<TuitionVO> stuTuitionList = this.tuitionService.stuTuitionList(map);
		model.addAttribute("stuTuitionList", stuTuitionList);

		return "tuition/tuition";
	}


	@GetMapping("/tuition_admin")
	public String admTuitionList(Model model,
			@RequestParam(value="keyword",required = false) String keyword,
			@RequestParam(value="currentPage",required = false, defaultValue ="1")int currentPage){
		

		List<TuitionVO> admTuitionList = this.tuitionService.admTuitionList();

		model.addAttribute("admTuitionList", admTuitionList);
		log.info("admTuitionList" + admTuitionList);

		return "tuition/tuition_admin";

	}

	@ResponseBody
	@PostMapping("/showStuNum")
	public Map<String, Object> showStuNum(@RequestBody Map<String, Object> map, HttpServletRequest request) {

		HttpSession session = request.getSession();
		UserVO userVO = (UserVO) session.getAttribute("userVO");

		log.info("tuitionNum에서 map의 값 : " + map);
		TuitionVO tuitionNum = this.tuitionService.tuitionNum(map);
		log.info("tuitionNum : " + tuitionNum);

		Map<String, Object> map2 = new HashMap<>();
		map2.put("tuitionNum", tuitionNum);
		return map2;
	}
	
	@PostMapping("/createPost")
	public String sendSms(@RequestParam ("smsContent") String smsContent,
						  @RequestParam ("smsNm") String smsNm,
						  @RequestParam ("smsPn") String smsPn,
						  @RequestParam ("smsDt") String smsDt,
//						  @RequestParam int smsNum,
			HttpServletRequest request
			) throws Exception {
//		log.info("/createPost에서 넘어온 smsNum의 값 : " + smsNum);
		log.info("/createPost에서 넘어온 smsContent의 값 : " + smsContent);
		log.info("/createPost에서 넘어온 smsDt의 값 : " + smsDt);
		log.info("/createPost에서 넘어온 smsPn의 값 : " + smsPn);
		log.info("/createPost에서 넘어온 smsNm의 값 : " + smsNm);
		
		// 이거는 coolsms 마이페이지에서 받아야됨
		String api_key = "NCSIDCFNP1IJWVEE";
		String api_secret = "QSRJOMEIVGMKWUVGMUYX1RHZF13L8MDD";

		Message coolsms = new Message(api_key, api_secret);
		request.setCharacterEncoding("utf-8");
		HashMap<String, String> map = new HashMap<String, String>();
		map.put("to", (String) request.getParameter("smsPn")); // 수신번호

		map.put("from", (String) request.getParameter("from")); // 발신번호
		map.put("text", (String) request.getParameter("smsContent")); // 문자내용
		map.put("type", "sms"); // 문자 타입
		map.put("app_version", "test app 1.2");
		
		System.out.println(map);
		try {
			JSONObject result = coolsms.send(map); // 보내기&전송결과받기

			System.out.println(result.toString());
		} catch (CoolsmsException e) {
			System.out.println(e.getMessage());
			System.out.println(e.getCode());
		}
		
		HashMap<String, Object> map2 = new HashMap<String, Object>();
		map2.put("smsContent", smsContent);
		map2.put("smsDt", smsDt);
		map2.put("smsPn", smsPn);
		map2.put("smsNm", smsNm);
		
		
		log.info("map2 : " + map2);
		int result = smsService.insertSms(map2);
		log.info("result : " + result);
		return "redirect:/tuition/tuition_admin";
	}

}
