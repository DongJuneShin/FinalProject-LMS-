<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace : xml파일이 여러개일 수 있으므로
	이를 구별하기 위한 식별 용도로 사용
 -->
<mapper namespace="kr.or.ddit.mapper.CourseMapper">
	<!-- (학생) 금학기 수강 목록 조회 -->
	<select id="getCourseList" parameterType="integer" resultType="courseVO">
		SELECT A.SBJ_NUM, A.TEA_NUM, A.SBJ_TITLE, B.TEA_NM_KOR, C.STU_NUM
		FROM SUBJECT A
		INNER JOIN TEACHER B
		ON(A.TEA_NUM = B.TEA_NUM)
		INNER JOIN COURSE_LIST C
		ON(A.SBJ_NUM = C.SBJ_NUM)
		WHERE C.STU_NUM = #{stuNum}
		AND A.SBJ_OC = 1
	</select>
	
	<!-- (교수)금학기 강의 목록 조회 -->
	<select id="getCourseListPro" parameterType="integer" resultType="courseVO">
		SELECT SBJ_NUM, TEA_NUM, SBJ_TITLE
		FROM SUBJECT
		WHERE TEA_NUM = #{teaNum}
	</select>
	
	<select id="getCourseListProByMap" parameterType="integer" resultType="HashMap">
		SELECT SBJ_NUM, TEA_NUM, SBJ_TITLE
		FROM SUBJECT
		WHERE TEA_NUM = #{teaNum}
	</select>
	
	
	<!-- (학생)주차별 목록 조회 -->
	<select id="detail" parameterType="courseVO" resultType="courseDetailVO">
		SELECT A.SI_NUM, A.SI_TARGET, A.SI_ONLINE, B.SP_ONLINEYN, A.SI_HWYN
		FROM SUBJECT_INDEX A
		INNER JOIN SUBJECT_PLAN B
		ON(A.SP_NUM = B.SP_NUM)
		WHERE A.SBJ_NUM=#{sbjNum}
		ORDER BY TO_NUMBER(A.SI_NUM)
	</select>
	
	<!-- 공지사항 목록 조회 -->
	<select id="getNoticeList" parameterType="courseVO" resultType="courseNoticeVO">
		SELECT ROW_NUMBER() OVER(ORDER BY A.SN_NUM) ROW_NUM, A.SN_NUM, A.SN_TITLE, B.TEA_NM_KOR, A.SN_DT
			 , A.SN_HIT, A.SN_READ
		FROM SUBJECT_NOTICE A
		INNER JOIN TEACHER B
		ON(A.TEA_NUM = B.TEA_NUM)
		WHERE A.SBJ_NUM = #{sbjNum}
		ORDER BY A.SN_NUM DESC
	</select>
	
	<!-- 과제 목록 조회 -->
	<select id="getAssignmentList" parameterType="String" resultType="courseAssignmentVO">
		SELECT ROW_NUMBER() OVER(ORDER BY A.AS_NUM DESC) ROW_NUM, A.AS_NUM, A.SI_NUM, A.AS_TITLE, A.AS_CONTENT, A.SP_NUM
		     , A.SBJ_NUM, A.AS_SDT, A.AS_EDT , B.SBM_NUM
		FROM ASSIGNMENT A
		LEFT OUTER JOIN SUBMIT B
		ON(A.AS_NUM = B.SBM_ANUM)
		WHERE A.SBJ_NUM = #{sbjNum}
	</select>
	
	<!-- 과제 상세내용 조회 -->
	<select id="assignmentDetail" parameterType="courseAssignmentVO" resultType="courseAssignmentVO">
		SELECT AS_NUM, SI_NUM, AS_TITLE, AS_CONTENT, SP_NUM
		     , SBJ_NUM, AS_SDT, AS_EDT
		FROM ASSIGNMENT
		WHERE SBJ_NUM = #{sbjNum}
		AND AS_NUM = #{asNum}
	</select>
	
	<!-- (과목별)과제 등록가능한 주차 목록 출력 -->
	<select id="getSiList" parameterType="String" resultType="subjectIndexVO">
		SELECT SI_NUM, SP_NUM, SBJ_NUM, SI_TARGET, SI_ONLINE, SI_HWYN
		FROM SUBJECT_INDEX
		WHERE SBJ_NUM = #{sbjNum}
		AND SI_HWYN = 1
	</select>
	
	<!-- (교수)과제 등록 -->
	<insert id="createAssignment" parameterType="courseAssignmentVO">
		INSERT INTO ASSIGNMENT(AS_NUM, SI_NUM, AS_TITLE, AS_CONTENT, SP_NUM
		                     , SBJ_NUM, AS_SDT, AS_EDT
		)VALUES(SEQ_ASSIGNMENT.NEXTVAL, #{siNum}, #{asTitle}, #{asContent}, #{spNum}
		      , #{sbjNum}, #{asSdt}, #{asEdt})
	</insert>
	
	<!-- 자료 목록 조회 -->
	<select id="getReferenceList" parameterType="courseVO" resultType="courseReferenceVO">
		SELECT ROW_NUMBER() OVER(ORDER BY A.RR_NUM) ROW_NUM
		     , A.*
		FROM REFERENCE_ROOM A
		WHERE SBJ_NUM = #{sbjNum}
		ORDER BY ROW_NUM DESC
	</select>
	
	<!-- 공지사항 상세내용 조회 -->
	<select id="noticeDetail" parameterType="courseNoticeVO" resultType="courseNoticeVO">
		SELECT A.SN_NUM, A.SN_TITLE, A.SN_CONTENT, A.SN_DT, A.SN_HIT
		     , A.SN_FILENAME, C.TEA_NM_KOR
		FROM SUBJECT_NOTICE A
		INNER JOIN SUBJECT B
		ON(A.SBJ_NUM = B.SBJ_NUM)
		INNER JOIN TEACHER C
		ON(B.TEA_NUM = C.TEA_NUM)
		WHERE A.SN_NUM = #{snNum}
		ORDER BY A.SN_NUM DESC
	</select>
	
	<!-- (교수)수강생 목록 조회 -->
	<select id="getStudentList" parameterType="String" resultType="HashMap">
		SELECT A.STU_NUM, C.DEPT_NM, A.STU_NM_KOR, B.SBJ_NUM
		FROM STUDENT A
		INNER JOIN COURSE_LIST B
		ON(A.STU_NUM = B.STU_NUM)
		INNER JOIN DEPARTMENT C
		ON(A.DEPT_NUM = C.DEPT_NUM)
		WHERE B.SBJ_NUM = #{sbjNum}
	</select>
	
	<!-- (교수)공지사항 등록 -->
	<insert id="createNotice" parameterType="courseNoticeVO">
		INSERT INTO SUBJECT_NOTICE(
									SN_NUM, SBJ_NUM, TEA_NUM, SN_TITLE, SN_CONTENT
								  , SN_DT, SN_FILENAME, SN_HIT, SN_READ
		)VALUES(SEQ_SUBJECT_NOTICE.NEXTVAL, #{sbjNum}, #{teaNum}, #{snTitle}, #{snContent}
			  , SYSDATE, #{snFilename}, 0, #{snRead}
		)
	</insert>
	
	<!-- (교수)공지사항 수정 -->
	<update id="noticeModify" parameterType="courseNoticeVO">
		UPDATE SUBJECT_NOTICE 
		SET SN_TITLE = #{snTitle}
		  , SN_CONTENT = #{snContent}
		WHERE SN_NUM = #{snNum}
	</update>
	
	<!-- (교수)공지사항 삭제 -->	
	<delete id="deleteNotice" parameterType="courseNoticeVO">
		DELETE FROM SUBJECT_NOTICE
		WHERE SBJ_NUM=#{sbjNum}
		AND SN_NUM = #{snNum}
	</delete>
	
	<!-- 공지사항 조회수 증가 -->
	<update id="increaseNoticeHit" parameterType="courseNoticeVO">
		UPDATE SUBJECT_NOTICE
		SET SN_HIT = #{snHit} + 1
		WHERE SN_NUM = #{snNum}
	</update>
	
	<!-- (교수)자료 게시글 등록 -->
	<insert id="createReference" parameterType="courseReferenceVO">
		INSERT INTO REFERENCE_ROOM(RR_NUM, SBJ_NUM, RR_TITLE, RR_NM) 
		VALUES(SEQ_REFERENCE_ROOM.NEXTVAL, #{sbjNum}, #{rrTitle}, #{rrNm})
	</insert>
	
	<!-- (교수)자료 게시글 삭제 -->
	<delete id="deleteReference" parameterType="courseReferenceVO">
		DELETE FROM REFERENCE_ROOM
		WHERE RR_NUM = #{rrNum}
	</delete>
</mapper>
