package kr.or.ddit.exam;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.subject.service.impl.SubjectService;
import kr.or.ddit.vo.SubjectVO;
import kr.or.ddit.vo.UserVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@RequestMapping("/exam")
@Controller
public class ExamController {
	
	@Inject
	SubjectService subjectService;
	@Inject
	ExamService examService;
	
	//온라인 시험 추가
	@GetMapping("/exam")
	public String examAdd(HttpServletRequest request, Model model) {
		
		HttpSession session = request.getSession();
		UserVO userVO = (UserVO) session.getAttribute("userVO");
		int teaNum = Integer.parseInt(userVO.getUsername()+"");
		
		List<SubjectVO> subjectVO =  subjectService.examAdd(teaNum);
		
		model.addAttribute("subjectVO", subjectVO);
		return "exam/examAdd";
	}
	
	@ResponseBody
	@PostMapping("/examCheck")
	public Map<String,Object> examCheck(@RequestBody Map<String,Object> map){
		
		log.info("examCheck에서 넘어온 과목코드 값 : "+map);
		int count = examService.examCheck(map.get("sbjNum")+"");//미리 시험문제를 냈는지 아니면 아예없는지 체크
		
		log.info("시험문제를 미리 냈는지 안냈는지 확인 : "+count);
		Map<String,Object> map2 = new HashMap<>();
		map2.put("result", count);
		return map2;
	}
	
	@GetMapping("/examMake")
	public String examMake(@RequestParam("sbjNum") String sbjNum, HttpServletRequest request, Model model) {
//		log.info("examMake에서 sbjNum의 값 : "+sbjNum);
//		
//		int result = examService.examMake(sbjNum);//exam테이블에 시험 데이터를 넣음
//		HttpSession session = request.getSession();
		
		SubjectVO subjectVO = examService.subjectDetail(sbjNum);//과목 상세정보 가져오기
		
		//log.info("examMake에서 결과값 : "+result);
		model.addAttribute("subjectVO", subjectVO);
		return "exam/examMake";
	}
	
	//exam테이블에 데이터 넣기 - 첫번째
	@ResponseBody
	@PostMapping("/examTable")
	public Map<String,Object> examTable(@RequestBody Map<String,Object> map){
		log.info("examMake에서 sbjNum의 값 : "+map.get("sbjNum"));
		String sbjNum = map.get("sbjNum")+"";
		int result = examService.examMake(sbjNum);//exam테이블에 시험 데이터를 넣음
		log.info("examMake에서 결과값 : "+result);
		
		int exmNum = examService.getExamNum(sbjNum);//시험과목에 대한 시험번호 가져옴
		
		
		Map<String,Object> map2 = new HashMap<>();
		map2.put("result", result);//시험테이블에 넣은 성공유무
		map2.put("examNum", exmNum);//해당 과목이 exam테이블에서 등록번호가져옴
		return map2;
	}
	
	
	//examQue 테이블에 데이터 넣기 - 두번째
	@ResponseBody
	@PostMapping("/examQue")
	public Map<String,Object> examQue(@RequestBody Map<String,Object> map){
//		let data2 = {"examNum" : examNum , 
//				 "sbjNum" : sbjNum, 
//				 "question" : question,
//				 "queAns" : queAns
//				}
		
		log.info("examQue 에서 map의 값 : "+map);
		
		int result = examService.examQue(map);//examQue 테이블에 데이터 넣기
		int exmqueNum = examService.getExamqueNum(map);//해당 과목의 examQue테이블 등록번호가져옴
		
		Map<String,Object> map2 = new HashMap<>();
		map2.put("exmqueNum", exmqueNum);
		return map2;
	}
	
	//examSel 테이블에 데이터 넣기 - 마지막
		@ResponseBody
		@PostMapping("/examSel")
		public Map<String,Object> examSel(@RequestBody Map<String,Object> map){
//			let data3  = {"exmqueNum" : exmqueNum, 
//		 	   "examNum" : examNum, 
//		       "sbjNum" : sbjNum,
//		       "queList" :  abc
//			}; //data3 끝
			
			log.info("examSel 에서 map의 값 : "+map);
			int result = examService.examSel(map);
			
			log.info("examSel 에서 result의 값 : " + result);
			Map<String,Object> map2 = new HashMap<>();
			map2.put("result", result);
			return map2;
		}
}
