<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.or.ddit.mapper.EnrollMapper">

	<select id="getSubjectList" parameterType="subjectVO" resultType="subjectVO">
		SELECT SBJ_NUM, DEPT_NUM, TEA_NUM, SBJ_TITLE, SBJ_GRADE, SBJ_RECODE, SBJ_PERSONNEL, 
				SBJ_YN, SBJ_COMRE, SBJ_OC, SBJ_RS
		FROM SUBJECT
		WHERE TEA_NUM = #{teaNum}
		ORDER BY 1 DESC
	</select>
	
	<select id="makeSbjNum" parameterType="int" resultType="string">
		SELECT NVL(SUBSTR(A.SBJ_NUM, 1,3) || LPAD(SUBSTR(A.SBJ_NUM, 4) + 1, 5, 0), 
		        SUBSTR(B.TEA_NM_ENG, LENGTH(B.TEA_NM_ENG) -2) || '01001')
		FROM (SELECT MAX(SBJ_NUM) SBJ_NUM FROM SUBJECT WHERE TEA_NUM = #{teaNum}) A,
		     (SELECT TEA_NM_ENG FROM TEACHER WHERE TEA_NUM = #{teaNum}) B
	</select>
	
	<update id="insertSubject" parameterType="HashMap">
		MERGE INTO SUBJECT A 
		USING DUAL
		ON(A.SBJ_NUM = #{sbjNum}) 
		WHEN MATCHED THEN 
		    UPDATE SET SBJ_TITLE = #{sbjTitle}, SBJ_GRADE = #{sbjGrade}, 
		               SBJ_RECODE = #{sbjRecode}, SBJ_PERSONNEL = #{sbjPersonnel}, SBJ_RS = #{sbjRs}, 
		               SBJ_YN = 0, DEPT_NUM = #{deptNum}
		WHEN NOT MATCHED THEN 
		    INSERT(SBJ_NUM, TEA_NUM, SBJ_TITLE, SBJ_GRADE, SBJ_RECODE, SBJ_PERSONNEL, SBJ_RS, DEPT_NUM)
		    VALUES(#{sbjNum}, #{teaNum}, #{sbjTitle}, #{sbjGrade}, #{sbjRecode}, #{sbjPersonnel}, #{sbjRs}, #{deptNum})
	</update>

	<insert id="insertSubjectPlan" parameterType="HashMap">
		<selectKey resultType="string" order="BEFORE" keyProperty="spNum">
			SELECT TO_CHAR(SEQ_SUBJECT_PLAN.NEXTVAL) FROM DUAL
		</selectKey>
		
		INSERT INTO SUBJECT_PLAN(SP_NUM, SBJ_NUM, SP_MIDDLERATIO, SP_FINALRATIO, SP_HWRATIO, 
								SP_ATTRATIO, SP_ETCRATIO, SP_ONLINEYN, SP_TEXTBOOK)
		VALUES(#{spNum}, #{sbjNum}, #{spMiddleratio}, #{spFinalratio}, #{spHwratio}, 
				#{spAttratio}, #{spEtcratio}, #{sbjYn}, #{spTextbook})
	</insert>

	<update id="updateSubjectPlan" parameterType="HashMap">
		UPDATE SUBJECT_PLAN 
		SET SP_MIDDLERATIO = #{spMiddleratio}, SP_FINALRATIO = #{spFinalratio}, SP_HWRATIO = #{spHwratio}, 
			SP_ATTRATIO = #{spAttratio}, SP_ETCRATIO = #{spEtcratio}, SP_ONLINEYN = #{sbjYn}, SP_TEXTBOOK = #{spTextbook}
		WHERE SP_NUM = #{spNum}
		  AND SBJ_NUM = #{sbjNum}
	</update>
	
	<update id="insertSubjectIndex" parameterType="java.util.List">
			MERGE INTO SUBJECT_INDEX A
			USING (
				<foreach collection="list" item="siVO" open="" close="" separator="UNION" index="idx">
					SELECT #{siVO.siNum} AS SI_NUM, #{siVO.spNum} AS SP_NUM, 
							#{siVO.sbjNum} AS SBJ_NUM, #{siVO.siTarget} AS SI_TARGET
					FROM DUAL
				</foreach>
			) B
			ON (A.SP_NUM = B.SP_NUM AND A.SI_NUM=B.SI_NUM)
			WHEN MATCHED THEN 
					UPDATE SET SI_TARGET = B.SI_TARGET
			WHEN NOT MATCHED THEN 
			    INSERT (SI_NUM, SP_NUM, SBJ_NUM, SI_TARGET)
				VALUES(B.SI_NUM, B.SP_NUM, B.SBJ_NUM, B.SI_TARGET)
	</update>
	
	<select id="getSubject" parameterType="string" resultType="subjectVO">
		SELECT SBJ_NUM, DEPT_NUM, TEA_NUM, SBJ_TITLE, SBJ_GRADE, 
				SBJ_RECODE, SBJ_PERSONNEL, SBJ_YN, SBJ_COMRE, SBJ_OC, SBJ_RS
		FROM SUBJECT
		WHERE SBJ_NUM = #{sbjNum}
	</select>
	
	<select id="getSubjectPlan" parameterType="string" resultType="subjectPlanVO">
		SELECT SP_NUM, SBJ_NUM, SP_MIDDLERATIO, SP_FINALRATIO, SP_HWRATIO, 
		        SP_ATTRATIO, SP_ETCRATIO, SP_ONLINEYN, SP_TEXTBOOK
		FROM SUBJECT_PLAN A
		WHERE SP_NUM = (SELECT MAX(SP_NUM) SP_NUM FROM SUBJECT_PLAN WHERE SBJ_NUM = #{sbjNum})
	</select>
	
	<select id="getSubjectIndexList" parameterType="String" resultType="subjectIndexVO">
		SELECT SI_NUM, SP_NUM, SBJ_NUM, SI_TARGET
		FROM SUBJECT_INDEX
		WHERE SP_NUM = #{spNum}
		ORDER BY TO_NUMBER(SI_NUM)
	</select>
	
	<delete id="deleteSubject" parameterType="String">
		DELETE FROM SUBJECT WHERE SBJ_NUM = #{sbjNum}
	</delete>
	
	<select id="getBuilding" resultType="buildingVO">
		SELECT BUILDING_CODE, BUILDING_NAME FROM BUILDING
	</select>
	
	<select id="getRoomList" parameterType="String" resultType="roomVO">
		SELECT ROOM_CODE, BUILDING_CODE, ROOM_FLR, ROOM_CAPACITY, ROOM_LECT, ROOM_PHOTO
		FROM ROOM
		WHERE BUILDING_CODE = #{buildingCOde}
	</select>
	
	<resultMap type="timeVO" id="timeMap">
		<result property="timeTcode" column="TIME_TCODE" />
	</resultMap>
	
	<resultMap type="subjectVO" id="sbjMap">
		<result property="sbjTitle" column="SBJ_TITLE" />
		<collection property="timeTcodeList" resultMap="timeMap" />
	</resultMap>
	
	<select id="getTimeTable" parameterType="String" resultMap="sbjMap">
		SELECT (SELECT SBJ_TITLE FROM SUBJECT C WHERE C.SBJ_NUM = A.SBJ_NUM AND C.SBJ_OC = 1) SBJ_TITLE
				, A.TIME_TCODE
		FROM LECTURE_TM A, 
			(SELECT TIME_TCODE, ROOM_CODE FROM ROOM_SCHEDULE WHERE ROOM_CODE=#{roomCode} AND RS_ISEMPTY = 1) B
		WHERE A.ROOM_CODE = B.ROOM_CODE
		AND A.TIME_TCODE = B.TIME_TCODE
	</select>
	
</mapper>

