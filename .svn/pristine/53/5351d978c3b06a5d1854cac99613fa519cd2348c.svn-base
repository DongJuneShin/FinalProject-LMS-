package kr.or.ddit.employee;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.employee.service.EmployeeService;
import kr.or.ddit.util.ArticlePage;
import kr.or.ddit.vo.AdminVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@RequestMapping("/manage")
@Controller
public class EmployeeController {
	
	@Autowired
	EmployeeService employeeService; 
	/**
	 * 교직원 조회
	 * 관리자
	 */
	
	@GetMapping("/empManage")
	public String admList(Model model,
//			@RequestParam(value="empnnum",required = false, defaultValue ="사번")String empnnum,
//			@RequestParam(value="empnmkor",required = false , defaultValue ="이름")String empnmkor,
//			@RequestParam(value="empdp",required = false  , defaultValue ="부서")String empdp,
//			@RequestParam(value="empgroup",required = false  , defaultValue ="소속")String empgroup,
			@RequestParam(value="currentPage",required = false, defaultValue ="1")int currentPage,
			@RequestParam(value = "category", required = false) String category,
			@RequestParam(value = "keyword", required = false) String keyword,
			@RequestParam (value = "size", required = false, defaultValue = "10") int size) {
		
			Map<String,Object> map = new HashMap<>();
			map.put("keyword", keyword);
			map.put("category", category);
//			map.put("empnnum", empnnum);
//			map.put("empnmkor", empnmkor);
//			map.put("empdp", empdp);
//			map.put("empgroup", empgroup);
			
			int total = employeeService.getTotal(map);		
			map.put("size", size);
			map.put("currentPage", currentPage);
			
			log.info("total : " + total); //게시글 총 갯수 확인해보자
			
			List<AdminVO> admList = this.employeeService.admList(map);
			
			
			model.addAttribute("data",new ArticlePage<AdminVO>(total, currentPage, size,admList ));
			return "manage/empManage";
	}
	
	
	/**
	 * 교직원 상세조회
	 * 관리자
	 */
	@ResponseBody
	@PostMapping("/empNum")
	public Map<String, Object> empNum(@RequestBody Map<String, Object> map , HttpServletRequest request) {
		
		log.info("empNum에서 empNum의 값 : " + map);
		AdminVO admVO = this.employeeService.empNum(map);
		log.info("admVO : " + admVO);
		
		Map<String, Object> map2 = new HashMap<String, Object>();
		map2.put("admVO", admVO);
		return map2;
	}
	@ResponseBody
	@PostMapping("/deleteEmp")
	public Map<String, Object> deleteEmp(@RequestBody Map<String, Object> map) {
		
		log.info("deleteEmp에서 넘겨 받은 map의 값 : "+map);
		
		int result = this.employeeService.deleteNum(map);
		
		Map<String,Object> map2 = new HashMap<>();
		
		map2.put("result", result);
		
		return map2;
	}
	
	@ResponseBody
	@PostMapping("/updatePost")
	public Map<String, Object> updatePost(@RequestParam Map<String, Object> map){
			log.info("updatePost에서 넘겨받은 map의 값 : " + map);
			
			
		
			
			int result = this.employeeService.updatePost(map);
			
			
			log.info("result : " + result);
			
			Map<String, Object> map2 = new HashMap<String, Object>();
			AdminVO admVO = this.employeeService.empNum(map);
			log.info("admVO : " + admVO);
			 
			map2.put("admVO", admVO);
					
					
			
		return map2;
	}
	
	/**
	 * 학과 조회
	 * 관리자
	 */
	@GetMapping("/deptManage")
	public String deptManage() {
		return "manage/deptManage";
	}
	
	/**
	 * 총 지표
	 * 관리자
	 */
	@GetMapping("/graph")
	public String graph() {
		return "manage/graph";
	}
	
}
