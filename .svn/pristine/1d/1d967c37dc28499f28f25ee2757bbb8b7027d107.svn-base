package kr.or.ddit.course.service.impl;

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import kr.or.ddit.course.service.CourseService;
import kr.or.ddit.mapper.CourseMapper;
import kr.or.ddit.vo.CourseAssignmentVO;
import kr.or.ddit.vo.CourseDetailVO;
import kr.or.ddit.vo.CourseNoticeVO;
import kr.or.ddit.vo.CourseReferenceVO;
import kr.or.ddit.vo.CourseVO;
import kr.or.ddit.vo.SubjectIndexVO;
import kr.or.ddit.vo.SubmitVO;
import lombok.extern.slf4j.Slf4j;

//스프링이 인식하여 자바빈 객체로 등록해줌
@Slf4j
@Service
public class CourseServiceImpl implements CourseService {
	
	@Autowired
	CourseMapper CourseMapper;
	
	//금학기 수강과목 리스트 출력(학생)
	@Override
	public List<CourseVO> getCourseList(int stuNum){
		return CourseMapper.getCourseList(stuNum);
	}
	
	//금학기 강의목록 출력(교수)
	@Override
	public List<CourseVO> getCourseListPro(int teaNum){
		return CourseMapper.getCourseListPro(teaNum);
	}
	
	//금학기 강의목록 출력(교수) --> VO 추가 생성 없이 Map으로 조회하는 방법 
	@Override
	public List<Map<String, Object>> getCourseListProByMap(int teaNum) {
		return CourseMapper.getCourseListProByMap(teaNum);
	}
	
	//과목별 상세조회
	@Override
	public List<CourseDetailVO> detail(CourseVO courseVO) {
		return CourseMapper.detail(courseVO);
	}
	
	//과목공지 조회수 증가
	@Override
	public int increaseNoticeHit(CourseNoticeVO courseNoticeVO) {
		return CourseMapper.increaseNoticeHit(courseNoticeVO);
	}
	
	//과목공지 리스트 출력
	@Override
	public List<CourseNoticeVO> getNoticeList(CourseVO courseVO){
		return CourseMapper.getNoticeList(courseVO);
	}
	
	//과제 목록 조회
	@Override
	public List<CourseAssignmentVO> getAssignmentList(String sbjNum){
		return CourseMapper.getAssignmentList(sbjNum);
	}
	
	//과제 상세정보 조회
	@Override
	public CourseAssignmentVO assignmentDetail(CourseAssignmentVO courseAssignmentVO) {
		return CourseMapper.assignmentDetail(courseAssignmentVO);
	}
	
	//(학생)과제 제출 여부 조회
	@Override
	public SubmitVO submitCheck(SubmitVO submitVO) {
		return CourseMapper.submitCheck(submitVO);
	}
	
	//(학생)과제 제출
	@Override
	public int submitAssignment(SubmitVO submitVO) {
		return CourseMapper.submitAssignment(submitVO);
	}
	
	//(과목별)과제 등록가능한 주차 목록 출력
	@Override
	public List<SubjectIndexVO> getSiList(String sbjNum) {
		return CourseMapper.getSiList(sbjNum);
	}
	
	//과목 자료 리스트 출력
	@Override
	public List<CourseReferenceVO> getReferenceList(CourseVO courseVO){
		return CourseMapper.getReferenceList(courseVO);
	}
	
	//과목공지 상세내용 조회
	@Override
	public CourseNoticeVO noticeDetail(CourseNoticeVO courseNoticeVO){
		return CourseMapper.noticeDetail(courseNoticeVO);
	}
	
	//(교수)수강생 목록 조회
	@Override
	public List<Map<String, Object>> getStudentList(String sbjNum){
		return CourseMapper.getStudentList(sbjNum);
	}
	
	//(교수)공지사항 등록
	@Override
	public int createNotice(CourseNoticeVO courseNoticeVO) {
		return CourseMapper.createNotice(courseNoticeVO);
	}
	
	//(교수)공지사항 수정
	@Override
	public int noticeModify(CourseNoticeVO courseNoticeVO) {
		return CourseMapper.noticeModify(courseNoticeVO);
	}
	
	//(교수)과제 수정
	@Override
	public int updateAssignment(CourseAssignmentVO courseAssignmentVO) {
		return CourseMapper.updateAssignment(courseAssignmentVO);
	}
	
	//(교수)과제 삭제
	@Override
	public int deleteAssignment(int asNum) {
		return CourseMapper.deleteAssignment(asNum);
	}
	
	//(교수)공지사항 삭제
	@Override
	public int deleteNotice(CourseNoticeVO courseNoticeVO) {
		return CourseMapper.deleteNotice(courseNoticeVO);
	}
	
	//(교수)과제 등록
	@Override
	public int createAssignment(CourseAssignmentVO courseAssignmentVO) {
		return CourseMapper.createAssignment(courseAssignmentVO);
	}
	
	//(교수)자료 게시글 등록
	@Override
	public int createReference(CourseReferenceVO courseReferenceVO) {
		return CourseMapper.createReference(courseReferenceVO);
	}
	
	//(교수)자료 게시글 삭제
	@Override
	public int deleteReference(CourseReferenceVO courseReferenceVO) {
		return CourseMapper.deleteReference(courseReferenceVO);
	}
	
	//과목별 수강생 출석현황 목록 출력
	@Override
	public List<Map<String, Object>> selectAttendanceList(String sbjNum){
		return CourseMapper.selectAttendanceList(sbjNum);
	}
	
	//주차별 강의 횟수 카운트
	@Override
	public List<Map<String, Object>> countLecture(String sbjNum) {
		return CourseMapper.countLecture(sbjNum);
	}
}
