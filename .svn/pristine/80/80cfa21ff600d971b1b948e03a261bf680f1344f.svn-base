package kr.or.ddit.dp;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.UUID;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.multipart.MultipartFile;

import kr.or.ddit.dp.service.IDPNotieBoardService;
import kr.or.ddit.vo.DepartmentFileVO;
import kr.or.ddit.vo.DepartmentNoticeVO;
import lombok.extern.slf4j.Slf4j;
import net.coobird.thumbnailator.Thumbnailator;

@RequestMapping("/dpNotieBoard")
@Slf4j
@Controller
public class DPNoticeBoardController {
	
	@Autowired
	IDPNotieBoardService service;
	
	@GetMapping("/dpNoticeBoardList")
	public String dpNoticeBoardList() {
		return "dp/DPNoticeBoardList";
	}
	
	@GetMapping("/dpNoticeBoardForm")
	public String dpNoticeBoardForm(Model model) {
		
		int dnNum = service.getDnNum();
		
		model.addAttribute("dnNum", dnNum);
		
		return "dp/dpNoticeBoardForm";
	}
	
//	@PostMapping("/createPost")
//	public String createPost(@ModelAttribute DepartmentNoticeVO dnVO, Model model) {
//		
//		String uploadFolder = "C:\\eclipse_202006\\workspace\\springProj\\src\\main\\webapp\\resources\\upload";
//
//		// make folder 시작 ------------------------
//		File uploadPath = new File(uploadFolder, getFolder());
//		log.info("uploadPath : " + uploadPath);
//
//		// 만약 연/월/일 해당 폴더가 없다면 생성
//		if (uploadPath.exists() == false) {
//			uploadPath.mkdirs();
//		}
//		// make folder 종료 ------------------------
//
//		log.info("dnVO : " + dnVO);
//
//		MultipartFile[] multipartFiles = dnVO.getFiles();
//		log.info("mltipartFile : " + multipartFiles);
//
//		List<DepartmentFileVO> voList = new ArrayList<DepartmentFileVO>();
//		int seq = 1;
//		// uploadFile 정보를 통해서 attachVOList에 값들을  setting 해줘야 함
//		// 배열로부터 하나씩 파일을 꺼내오자
//		for (MultipartFile multipartFile : multipartFiles) {
//			log.info("-----------------------------");
//			DepartmentFileVO vo = new DepartmentFileVO();
//
//			// 실제 파일 명
//			String uploadFileName = multipartFile.getOriginalFilename();
//
//
//			// ------ 같은 날 같은 이미지를 업로드 시 파일 중복 방지 시작 ---------------------
//			// java.util.UUID >> 랜덤값 생성
//			UUID uuid = UUID.randomUUID(); // 임의의 값을 생성
//			// 원래 파일 이름과 구분하기 위해 _를 붙임
//			uploadFileName = uuid.toString() + "_" + uploadFileName;
//			// ------ 같은 날 같은 이미지를 업로드 시 파일 중복 방지 종료 ---------------------
//
//			// 파일 객체 설계(복사할 대상 경로, 파일명)
//			File saveFile = new File(uploadPath, uploadFileName);
//
//			try {
//				// 파일 복사가 일어남
//				multipartFile.transferTo(saveFile);
//
//			} catch (IllegalStateException e) {
//				log.error(e.getMessage());
//				return "0";
//			} catch (IOException e) {
//				log.error(e.getMessage());
//				return "0";
//			}
//
//			vo.setDfNum(seq++);
//			vo.setDfNm("/" + getFolder().replace("\\", "/") + "/" + uploadFileName);
//			vo.setFilesize((int) multipartFile.getSize());
//			vo.setEtpId(lprodVO.getLprodGu());
//			voList.add(vo);
//		}
//		lprodVO.setAttachVOList(voList);
//
//		log.info("(after) lprodVO : " + lprodVO);
//
//		int result = lprodService.createPost(lprodVO);
//	}
	
	// 연/월/일  폴더 생성
	public static String getFolder() {
		 // make folder 시작----------------------------
	      // 2023-01-27 형식 지정
	      SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	      
	      // 날짜 객체 생성(java.util 패키지)
	      Date date = new Date();
	      
	      // 2023-01-27
	      String str = sdf.format(date);
	      
	      // 단순 날짜 문자를 File객체의 폴더타입으로 바꾸기
	      return str.replace("-", File.separator);
	}	

}
