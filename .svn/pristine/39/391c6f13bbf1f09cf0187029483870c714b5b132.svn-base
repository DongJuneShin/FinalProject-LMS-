package kr.or.ddit.employee;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.employee.service.EmployeeService;
import kr.or.ddit.vo.AdminVO;
import kr.or.ddit.vo.UserVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@RequestMapping("/manage")
@Controller
public class EmployeeController {
	
	@Autowired
	EmployeeService employeeService; 
	/**
	 * 교직원 조회
	 * 관리자
	 */
	@GetMapping("/empManage")
	public String admList(Model model) {
		
		List<AdminVO> admList = this.employeeService.admList();
		model.addAttribute("data", admList);
		
		log.info("empManage에서 온 값 : " + admList);
		return "manage/empManage";
	}
	
	/**
	 * 교직원 상세조회
	 * 관리자
	 */
	@ResponseBody
	@PostMapping("/empNum")
	public Map<String, Object> empNum(@RequestBody Map<String, Object> map , HttpServletRequest request) {
		HttpSession session = request.getSession();
		UserVO userVO = (UserVO) session.getAttribute("userVO");
		
		log.info("empNum에서 empNum의 값 : " + map);
		AdminVO admVO = this.employeeService.empNum(map);
		log.info("admVO : " + admVO);
		
		Map<String, Object> map2 = new HashMap<String, Object>();
		map2.put("admVO", admVO);
		return map2;
	}
	@ResponseBody
	@PostMapping("/deleteEmp")
	public Map<String, Object> deleteEmp(@RequestBody Map<String, Object> map) {
		
		log.info("deleteEmp에서 넘겨 받은 map의 값 : "+map);
		
		int result = this.employeeService.deleteNum(map);
		
		Map<String,Object> map2 = new HashMap<>();
		
		map2.put("result", result);
		
		return map2;
	}
	
	
	
	/**
	 * 학과 조회
	 * 관리자
	 */
	@GetMapping("/deptManage")
	public String deptManage() {
		return "manage/deptManage";
	}
	
	/**
	 * 총 지표
	 * 관리자
	 */
	@GetMapping("/graph")
	public String graph() {
		return "manage/graph";
	}
	
}
