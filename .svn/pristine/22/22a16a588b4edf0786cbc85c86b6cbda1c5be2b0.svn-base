package kr.or.ddit.department;



import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.department.service.DPService;
import kr.or.ddit.util.ArticlePage;
import kr.or.ddit.vo.DepartmentVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@RequestMapping("/manage")
@Controller
public class DPController {
	
	@Autowired
	DPService dpService;
	
	/**
	 * 학과 조회
	 * 관리자
	 */
	@GetMapping("/deptManage")
	public String deptList(Model model,
			@RequestParam(value="college",required = false, defaultValue ="")String college,
//			@RequestParam(value="department",required = false , defaultValue ="전체")String deptNm,
//			@RequestParam(value="keyword",required = false) String keyword,
			@RequestParam(value="currentPage",required = false, defaultValue ="1")int currentPage,
			@RequestParam (value = "size", required = false, defaultValue = "10") int size){
		
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("currentPage", currentPage);
		map.put("size", size);
		map.put("college", college);
		log.info("=======================");
		log.info("college : " + college);
		log.info("=======================");
		
		int total = this.dpService.getTotal(map);
		
		List<DepartmentVO> deptList = this.dpService.deptList(map);
		
		model.addAttribute("data", new ArticlePage<DepartmentVO>(total, currentPage, size, deptList));
		model.addAttribute("college", college);
		model.addAttribute("map", map);
		return "manage/deptManage";
	}
	
	@ResponseBody
	@PostMapping("/getCollNm")
	public Map<String, Object> getCollNm(){
		
		log.info("getCollNm에서 넘어온 값");
		
		List<DepartmentVO> getCollNmList = this.dpService.getCollNm();
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("data", getCollNmList);
		return map;
	}
	@ResponseBody
	@PostMapping("/deleteNum")
	public Map<String, Object> deleteNum(@RequestBody Map<String, Object> map){
		
		log.info("deleteNum에서 넘겨받은 map의 값 : " + map);
		
		int result = this.dpService.deleteNum(map);
		
		Map<String, Object>map2 = new HashMap<String, Object>();
		
		map2.put("result", result);
		
		return map2;
	}
	
	@ResponseBody
	@PostMapping("/gradeForm")
	public Map<String, Object> createDeptNm(@RequestParam Map<String, Object> map){
		
		log.info("gradeForm에서 넘어온 map : " + map);
		
		return null;
	}
	
	
	
	
	
	
	
	
	
	
//	@ResponseBody
//	@PostMapping("/deptNm")
//	public Map<String, Object> deptNm(@RequestBody Map<String, Object> map) {
//		
//		log.info("deptNm에서 넘어온 Nm값 " + map);
//		DepartmentVO departmentVO = this.dpService.deptNm(map);
//		log.info("departmentVO : " + departmentVO);
//		
//		Map<String, Object> map2 = new HashMap<String, Object>();
//		map2.put("departmentVO", departmentVO);
//		
//		return map2;
//	}
}
	
