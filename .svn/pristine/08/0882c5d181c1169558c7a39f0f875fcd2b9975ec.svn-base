<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace : xml파일이 여러개일 수 있으므로
	이를 구별하기 위한 식별 용도로 사용
 -->
<mapper namespace="kr.or.ddit.mapper.AcademicMapper">
	<!-- 학생 학적정보 출력 -->
	<select id="getStuInfo" parameterType="int" resultType="hashMap">
		SELECT C.STU_NUM, C.STU_NM_KOR, C.STU_STATUS, D.DEPT_NM, C.STU_SEMESTER, NVL(C.STU_DMAJOR,0) AS STU_DMAJOR
		     , NVL(STU_MINOR,0) AS STU_MINOR
		     , (
		        SELECT NVL(SUM(A.SBJ_RECODE),0) AS SUM_MAJOR
		        FROM SUBJECT A
		        LEFT OUTER JOIN COURSE_LIST B
		        ON(B.SBJ_NUM = A.SBJ_NUM)
		        WHERE DEPT_NUM IS NOT NULL
		        AND B.STU_NUM = #{stuNum}
		        )AS MAJOR_RECODE
		     , (
		         SELECT NVL(SUM(A.SBJ_RECODE),0) AS SUM_ELECTIVE
		        FROM SUBJECT A
		        LEFT OUTER JOIN COURSE_LIST B
		        ON(B.SBJ_NUM = A.SBJ_NUM)
		        WHERE DEPT_NUM IS NULL
		        AND B.STU_NUM = #{stuNum}
		        ) AS ELECTIVE_RECODE
		FROM STUDENT C
		INNER JOIN DEPARTMENT D
		ON(D.DEPT_NUM = C.DEPT_NUM)
		WHERE STU_NUM = #{stuNum}
	</select>
	
	<!-- (학생)각 학적변동 신청 건수 조회(처리상태:대기) -->
	<select id="getAcCnt" parameterType="hashMap" resultType="int">
		SELECT COUNT(*) AS CNT
		FROM ACADEMIC_CHG
		WHERE STU_NUM = #{stuNum}
		AND AC_LIST = #{acList}
		AND AC_CHECK = 0
	</select>
	
	<!-- (학생)학적상태 조회 -->
	<select id="getStuStatus" parameterType="int" resultType="int">
		SELECT NVL(STU_STATUS, 0) AS STU_STATUS
		FROM STUDENT
		WHERE STU_NUM = #{stuNum}	
	</select>
	
	<!-- 휴학 신청 -->
	<insert id="appLeave" parameterType="academicVO">
		INSERT INTO ACADEMIC_CHG(
                          AC_NUM, STU_NUM, AC_REASON, AC_LIST, AC_SDT
                        , AC_EDT, AC_CHECK, AC_COMRE)
		VALUES(SEQ_ACADEMIC_CHANGE.NEXTVAL, #{stuNum}, #{acReason}, 1, #{acSdt}
		     , #{acEdt}, 0, NULL)
	</insert>
	
	<!-- (학생)휴학생 휴학 신청내역 조회 -->
	<select id="getLeaveHistory" parameterType="int" resultType="academicVO">
		SELECT AC_NUM, STU_NUM, AC_REASON, AC_LIST, AC_SDT
		     , AC_EDT, AC_CHECK, NVL(AC_COMRE, ' ') AS AC_COMRE
		FROM ACADEMIC_CHG
		WHERE STU_NUM = #{stuNum}
		AND AC_LIST = 1
		AND SUBSTR(AC_EDT,1,4) >= TO_CHAR(SYSDATE,'YYYY')
		ORDER BY AC_EDT DESC
	</select>
	
	<!-- (학생)복학 신청 -->
	<insert id="appReturn" parameterType="hashMap">
		INSERT INTO ACADEMIC_CHG(
								    AC_NUM, STU_NUM, AC_REASON, AC_LIST, AC_SDT
								  , AC_EDT, AC_CHECK, AC_COMRE
								)
		VALUES(
				SEQ_ACADEMIC_CHANGE.NEXTVAL, #{stuNum}, NULL, 0, #{acSdt}
			  , NULL, 0, NULL
			  )
	</insert>
	
	<!-- 복수전공/부전공 신청 내역 조회 -->
	<select id="getDMHistory" parameterType="hashMap" resultType="int">
		SELECT COUNT(DM_NUM) AS CNT
		FROM DOUBLE_MAJOR
		WHERE STU_NUM = #{stuNum}
		AND DM_DIVISION = #{dmDivision}
		AND NVL(DM_CHECK,0) = #{dmCheck}
	</select>
	
	<!-- (학생)자퇴 신청 -->
	<insert id="appDropout" parameterType="hashMap">
		INSERT INTO ACADEMIC_CHG(
								  AC_NUM, STU_NUM, AC_REASON, AC_LIST, AC_SDT
								, AC_EDT, AC_CHECK, AC_COMRE
		)VALUES(
				 SEQ_ACADEMIC_CHANGE.NEXTVAL, #{stuNum}, #{acReason}, 2, #{acSdt}
			   , NULL, 0, NULL)
	</insert>
	
	<resultMap type="acaColleageVO" id="acaColleageMap">
		<result property="collNum" column="COLL_NUM" />
		<result property="collNm" column="COLL_NM" />
		<collection property="acaDeptList" resultMap="acaDeptMap"></collection>
	</resultMap>
	
	<resultMap type="acaDeptVO" id="acaDeptMap">
		<result property="deptNum" column="DEPT_NUM" />
		<result property="collNum" column="COLL_NUM" />
		<result property="deptNm" column="DEPT_NM" />
		<result property="deptNumber" column="DEPT_NUMBER" />
		<result property="deptFees" column="DEPT_FEES" />
	</resultMap>
	<!-- (학생)복수전공/부전공 신청 - 단과대학 명 & 단과대학별 소속학과 출력 -->
	<select id="getCollNDeptList" resultMap="acaColleageMap">
		SELECT DISTINCT A.COLL_NUM, A.COLL_NM, B.DEPT_NUM, B.COLL_NUM, B.DEPT_NM, B.DEPT_NUMBER, B.DEPT_FEES
		FROM COLLEAGE A
		LEFT OUTER JOIN DEPARTMENT B
		ON(B.COLL_NUM = A.COLL_NUM)
		WHERE A.COLL_NUM > 0
		ORDER BY A.COLL_NM ASC, B.DEPT_NM
	</select>
	
	<!-- (학생)복수전공/부전공 신청 - 단과대 내 학과 목록 출력 -->
	<select id="getDeptList" parameterType="String" resultType="AcaDeptVO">
		SELECT DISTINCT B.DEPT_NUM, B.COLL_NUM, B.DEPT_NM, B.DEPT_NUMBER, B.DEPT_FEES
		FROM COLLEAGE A
		LEFT OUTER JOIN DEPARTMENT B
		ON(B.COLL_NUM = A.COLL_NUM)
		WHERE A.COLL_NUM > 0 
		AND A.COLL_NM = #{collNm}
		ORDER BY B.DEPT_NM
	</select>
	
	<!-- 단과대학&학과명 동시 출력
	String collNum
	 -->
	<select id="getCnDList" parameterType="String" resultType="hashMap">
		SELECT DISTINCT A.COLL_NUM, A.COLL_NM, B.DEPT_NUM, B.COLL_NUM, B.DEPT_NM, B.DEPT_NUMBER, B.DEPT_FEES
		FROM COLLEAGE A
		LEFT OUTER JOIN DEPARTMENT B
		ON(B.COLL_NUM = A.COLL_NUM)
		WHERE A.COLL_NUM > 0 
		AND A.COLL_NUM = #{collNum}
		ORDER BY A.COLL_NM ASC, B.DEPT_NM
	</select>
	
	
	<!-- (학생)복수전공/부전공 신청 -->
	<insert id="appDM" parameterType="hashMap">
		INSERT INTO DOUBLE_MAJOR(
								  DM_NUM, DEPT_NO, STU_NUM, DM_DIVISION, DM_CHECK
							    , DM_COMRE, DM_CDT
		)VALUES(
				  SEQ_DOUBLE_MAJOR.NEXTVAL, #{deptNo}, #{stuNum}, #{dmDivision}, NULL
				, NULL, NULL)
	</insert>
	
	<!-- (학생)복수전공/부전공 신청 요건 조회(이수학기, 평균평점, 전공과목 이수학점 -->
	<select id="getStuQual" parameterType="int" resultType="hashMap">
		SELECT A.STU_NUM, A.STU_SEMESTER
		     , SUM(B.CL_FSCORE) AS SUM_FSCORE
		     , COUNT(B.CL_NUM) AS CNT
		     , ROUND(SUM(B.CL_FSCORE)/COUNT(B.CL_NUM),2) AS AR
		     , (
		            SELECT SUM(B.SBJ_RECODE)
		            FROM COURSE_LIST A
		            INNER JOIN SUBJECT B
		            ON(B.SBJ_NUM = A.SBJ_NUM)
		            WHERE A.STU_NUM = #{stuNum}
		            AND B.DEPT_NUM IS NOT NULL
		        )AS SUM_MAJOR
		FROM STUDENT A
		LEFT OUTER JOIN COURSE_LIST B
		ON(B.STU_NUM = A.STU_NUM)
		WHERE B.CL_NUM IS NOT NULL
		AND A.STU_NUM = #{stuNum}
		GROUP BY A.STU_NUM, A.STU_SEMESTER
	</select>
</mapper>









